// Code generated by MockGen. DO NOT EDIT.
// Source: controller.go

// Package server is a generated GoMock package.
package server

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStorageService is a mock of StorageService interface
type MockStorageService struct {
	ctrl     *gomock.Controller
	recorder *MockStorageServiceMockRecorder
}

// MockStorageServiceMockRecorder is the mock recorder for MockStorageService
type MockStorageServiceMockRecorder struct {
	mock *MockStorageService
}

// NewMockStorageService creates a new mock instance
func NewMockStorageService(ctrl *gomock.Controller) *MockStorageService {
	mock := &MockStorageService{ctrl: ctrl}
	mock.recorder = &MockStorageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorageService) EXPECT() *MockStorageServiceMockRecorder {
	return m.recorder
}

// GetYears mocks base method
func (m *MockStorageService) GetYears(ctx context.Context) ([]Year, error) {
	ret := m.ctrl.Call(m, "GetYears", ctx)
	ret0, _ := ret[0].([]Year)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetYears indicates an expected call of GetYears
func (mr *MockStorageServiceMockRecorder) GetYears(ctx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetYears", reflect.TypeOf((*MockStorageService)(nil).GetYears), ctx)
}

// GetContent mocks base method
func (m *MockStorageService) GetContent(ctx context.Context, year string) ([]Movie, error) {
	ret := m.ctrl.Call(m, "GetContent", ctx, year)
	ret0, _ := ret[0].([]Movie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContent indicates an expected call of GetContent
func (mr *MockStorageServiceMockRecorder) GetContent(ctx, year interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContent", reflect.TypeOf((*MockStorageService)(nil).GetContent), ctx, year)
}
